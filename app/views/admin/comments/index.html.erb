<section class="content-header">
    <h1>Liste des commentaires</h1>
</section>

<section class="content">
  <div class="row">
    <div class="col-xs-12">
      <div class="box">
        <div class="box-body">
          <table id="commentsTable" class="table table-hover table-striped table-responsive table-condensed no-margin">
            <thead>
              <tr>
                <th>Id</th>
                <th>Utilisateur</th>
                <th>Contenu</th>
                <th>Sujet</th>
                <th>Date Enregistrement</th>
                <th>Validé ?</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
                <% @comments.each do |comment| %>
                <tr>
                  <td><%= comment.id %></td>
                  <td><%= comment.user.email %></td>
                  <td><%= comment.content %></td>
                  <td>
                      <%= link_to comment.commentable.name, polymorphic_url(comment.commentable_type.tableize.singularize, :id => comment.commentable_id) %>
                  </td>
                  <td><%= time_tag(comment.created_at) %></td>
                  <td>
                    <%= form_tag admin_validatecomment_url do %>
                      <%= hidden_field_tag "id", comment.id %>
                      <% if comment.is_valid %>
                        <%= submit_tag "Oui", class: "btn btn-success"  %>
                      <% else %>
                        <%= submit_tag "Non", class: "btn btn-danger"  %>
                      <% end %>
                    <% end %>
                  </td>
                  <td>
                      <% if comment.commentable_type == "Article" %>
                        <%= link_to '<i class="fa fa-pencil"></i>'.html_safe, edit_article_comment_path(comment.commentable_id, comment.id), class: "btn btn-warning" %>
                        <%= link_to '<i class="fa fa-trash-o"></i>'.html_safe, article_comment_path(comment.commentable_id, comment.id), :method => 'delete', class: "btn btn-danger" %>
                      <% else %>
                        <%= link_to '<i class="fa fa-pencil"></i>'.html_safe, edit_project_comment_path(comment.commentable_id, comment.id), class: "btn btn-warning" %>
                        <%= link_to '<i class="fa fa-trash-o"></i>'.html_safe, project_comment_path(comment.commentable_id, comment.id), :method => 'delete', class: "btn btn-danger" %>
                      <% end %>
                  </td>
                </tr>
              <% end %>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</section>
<style type= "text/css">
  th, td {
    text-align: center;
  }
</style>
<script>
  $(document).ready(function(){
    $('#commentsTable').DataTable({
            "responsive": true,
            "sScrollX": false, // retrait de la barre de scroll horizontale en responsive
            "language": { // mise en Français du pluggin.
                "sProcessing": "Traitement en cours...",
                "sSearch": "Rechercher&nbsp;:",
                "sLengthMenu": "Afficher _MENU_ &eacute;l&eacute;ments",
                "sInfo": "Affichage de l'&eacute;l&eacute;ment _START_ &agrave; _END_ sur _TOTAL_ &eacute;l&eacute;ments",
                "sInfoEmpty": "Affichage de l'&eacute;l&eacute;ment 0 &agrave; 0 sur 0 &eacute;l&eacute;ment",
                "sInfoFiltered": "(filtr&eacute; de _MAX_ &eacute;l&eacute;ments au total)",
                "sInfoPostFix": "",
                "sLoadingRecords": "Chargement en cours...",
                "sZeroRecords": "Aucun &eacute;l&eacute;ment &agrave; afficher",
                "sEmptyTable": "Aucune donn&eacute;e disponible dans le tableau",
                "oPaginate": {
                    "sFirst": "Premier",
                    "sPrevious": "Pr&eacute;c&eacute;dent",
                    "sNext": "Suivant",
                    "sLast": "Dernier"
                },

                "oAria": {
                    "sSortAscending": ": activer pour trier la colonne par ordre croissant",
                    "sSortDescending": ": activer pour trier la colonne par ordre d&eacute;croissant"
                }
            },
            "pageLength": 25, // Affichage de 100 éléments de base au chargement de la page
            "lengthMenu": [ [25, 50, 100, 1000, -1], [25, 50, 100, 1000, "tous les"] ], // Changement du menu de base pour la sélection de l'affichage du nombre d'éléments : [nombres d'éléments à afficher] [libellés]
            "order": [[1, 'asc']]
        });
  });
</script>
